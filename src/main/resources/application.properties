
spring.jpa.show-sql:true
spring.jpa.hibernate.ddl-auto=create
#server.port = 8080
hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect

# Retrieve instance connection name from the previous step
spring.cloud.gcp.sql.instance-connection-name= xenon-sentry-338907:us-central1:mysql-instance2
spring.cloud.gcp.sql.database-name=mydb3

# Cloud SQL starter automatically configures the JDBC URL

# Configure username/password
spring.datasource.username=username
spring.datasource.password=root

# Configure connection pooling if needed
spring.datasource.hikari.maximum-pool-size=10

# So app starts despite "table already exists" errors.
spring.datasource.continue-on-error=true
# Enforces database initialization
spring.datasource.initialization-mode=always
spring.jpa.hibernate.use-new-id-generator-mappings=false

spring.cloud.gcp.project-id= xenon-sentry-338907
spring.cloud.gcp.credentials.location=file:/C:/Users/pc/Downloads/xenon-sentry-338907-8628d69d182b.json